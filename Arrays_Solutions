1)	DYNAMIC ARRAY

#include <bits/stdc++.h>

using namespace std;

int main()
{
int n,q;
cin >> n >> q;

vector <vector <int> > s(n,vector <int> ());
int lastAnswer=0;
for (int i=0;i<q;i++) {
    int t,x,y;
    cin >> t >> x >> y;

    if (t==1) {
        s[(x^lastAnswer)%n].push_back(y);
    }
    else {
        lastAnswer=s[(x^lastAnswer)%n][y%s[(x^lastAnswer)%n].size()];
        cout << lastAnswer << endl;
    }
}
}
   
2)	 ARRAY-DS 

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int a[n];
    for(int i =0;i<n;i++)
    {
        cin>>a[i];
    }
    for(int j=n-1;j>=0;j--)
    {
        cout<<a[j]<<" ";
    }
    return 0;
}


3)	 2D-ARRAY

#include<bits/stdc++.h>
using namespace std;

int main()
{
    int r=6,c=6;
    int a[r][c],hg[4][4]; int i,j,x,y,sum=0,max=-63;
     for( i=0;i<r;i++)
     {
        for( j=0;j<c;j++)
        {
             cin>>a[i][j];
        }
     }
     
    // max = -63;

    for ( i = 0; i < 4; i++) {
        for (j=0; j < 4; j++) {
             sum = a[i + 1][j + 1];
            for (int  k = 0; k < 3; k++) {
                sum += a[i][j + k];
                sum += a[i + 2][j + k];
            }
            if (sum > max) max = sum;
        }
    }

printf("%d",max);
return 0;
}


4)	 LEFT ROTATION

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        int d = scan.nextInt();
        int[] array = new int[n];
        for(int i=0; i<n;i++) {
            array[(i+n-d)%n] = scan.nextInt();
        }
        for(int i=0; i<n;i++) {
            System.out.print(array[i] + " ");
        }      
    }
}


5)	 SPARSE ARRAYS 

#include <string>
#include <iostream>
#include <map>
using namespace std;

int main() {
    map<string,int> m;
    int n,q;
    string s;
    cin>>n;
    
    for(int i=0; i<n; i++){
        cin>>s;
        m[s]++;
    }
    
    cin>>q;
    for(int i=0;i<q;i++){
        cin>>s;
        cout<<m[s]<<endl;
    } 
    return 0;
}


6)	 ARRAY MANIPULATION


#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

int main() {
    long int N,K,p,q,sum,i,j,max=0,x=0;

    cin>>N>>K;
    long int *a=new long int[N+1]();

    for(i=0;i<K;i++)
    {
        cin>>p>>q>>sum;
        a[p]+=sum;
        if((q+1)<=N) a[q+1]-=sum;
    }

    for(i=1;i<=N;i++)
    {
       x=x+a[i];
       if(max<x) max=x;

    }

    cout<<max;
    return 0;
}

